{"ast":null,"code":"var _jsxFileName = \"C:\\\\internship\\\\Degree-of-seperation\\\\src\\\\pages\\\\view\\\\View.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { createGraph, relation, view } from \"../../utility/utility\";\nimport Header from \"../../components/header/Header\";\nimport curd from \"../../curd/curd\";\nimport \"./view.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function View() {\n  _s();\n\n  const [state, setstate] = useState(null);\n  const [rel, setRel] = useState(null);\n  const ref = useRef(null);\n  const ref2 = useRef(null);\n\n  const fetch = () => {\n    let user = curd.readData(\"users\");\n    let keys = curd.getKeys(user);\n    let names = [];\n\n    for (let i = 0; i < keys.length; i++) {\n      names.push(user[keys[i]].name);\n    }\n\n    setstate(names);\n  };\n\n  function create() {\n    try {\n      const data = curd.readData(\"users\");\n      createGraph(data.count);\n      const v = curd.readData(\"friends\");\n      const af = v[0].allPair;\n\n      for (let i = 0; i < af.length; i++) {\n        relation(af[i][0], af[i][1]);\n      }\n    } catch (e) {\n      toast.error(\"Something went wrong\");\n    }\n  }\n\n  useEffect(() => {\n    create();\n    fetch();\n  }, []);\n\n  function view_r(e) {\n    e.preventDefault();\n    const user1 = ref.current.value;\n    const user2 = ref2.current.value;\n\n    if (user1 === \"\" || user2 === \"\") {\n      toast.error(\"Select 2 name first\");\n    } else {\n      if (user1 === user2) {\n        toast.error(\"Same person cannot be a friend\");\n      } else {\n        const id1 = curd.Id(\"users\", {\n          name: user1\n        });\n        const id2 = curd.Id(\"users\", {\n          name: user2\n        });\n        const st = view(id1, id2);\n        let rNames = [];\n        st.forEach(e => {\n          let temp = [];\n          e.forEach(f => {\n            temp.push(curd.readData(\"users\", f).name);\n          });\n          rNames.push(temp);\n          temp = [];\n        });\n        setRel(rNames);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formrow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"View Relation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              type: \"text\",\n              placeholder: \"Enter Name\",\n              ref: ref,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select first Person\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), state === null || state === void 0 ? void 0 : state.map(e => /*#__PURE__*/_jsxDEV(Option, {\n                value: e\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              type: \"text\",\n              placeholder: \"Enter Name\",\n              ref: ref2,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select second Person\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), state === null || state === void 0 ? void 0 : state.map(e => /*#__PURE__*/_jsxDEV(Option, {\n                value: e\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              style: {\n                marginTop: \"2rem\"\n              },\n              onClick: view_r,\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relationview\",\n        children: rel === null || rel === void 0 ? void 0 : rel.map(e => /*#__PURE__*/_jsxDEV(Box, {\n          sr: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(View, \"PsfZBvcPvDMzComMS7dX5jEAQTg=\");\n\n_c = View;\n\nconst Box = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      className: \"viewBx\",\n      children: props.sr.map((e, i, _ref) => {\n        let {\n          length\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Singlenode, {\n          name: e,\n          index: i,\n          length: length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Box;\n\nconst Singlenode = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"indi\",\n      children: props.index == 0 ? \"\" : \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      className: \"singlenode\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Singlenode;\n\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"option\", {\n      value: props.value,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c4 = Option;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"View\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Singlenode\");\n$RefreshReg$(_c4, \"Option\");","map":{"version":3,"names":["React","useRef","useEffect","useState","createGraph","relation","view","Header","curd","ToastContainer","toast","View","state","setstate","rel","setRel","ref","ref2","fetch","user","readData","keys","getKeys","names","i","length","push","name","create","data","count","v","af","allPair","e","error","view_r","preventDefault","user1","current","value","user2","id1","Id","id2","st","rNames","forEach","temp","f","map","marginTop","Box","props","color","sr","Singlenode","index","Option"],"sources":["C:/internship/Degree-of-seperation/src/pages/view/View.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { createGraph, relation, view } from \"../../utility/utility\";\r\nimport Header from \"../../components/header/Header\";\r\nimport curd from \"../../curd/curd\";\r\nimport \"./view.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nexport default function View() {\r\n  const [state, setstate] = useState(null);\r\n  const [rel, setRel] = useState(null);\r\n  const ref = useRef(null);\r\n  const ref2 = useRef(null);\r\n  const fetch = () => {\r\n    let user = curd.readData(\"users\");\r\n    let keys = curd.getKeys(user);\r\n    let names = [];\r\n    for (let i = 0; i < keys.length; i++) {\r\n      names.push(user[keys[i]].name);\r\n    }\r\n    setstate(names);\r\n  };\r\n  function create() {\r\n    try {\r\n      const data = curd.readData(\"users\");\r\n      createGraph(data.count);\r\n      const v = curd.readData(\"friends\");\r\n      const af = v[0].allPair;\r\n      for (let i = 0; i < af.length; i++) {\r\n        relation(af[i][0], af[i][1]);\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"Something went wrong\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    create();\r\n    fetch();\r\n  }, []);\r\n  function view_r(e) {\r\n    e.preventDefault();\r\n    const user1 = ref.current.value;\r\n    const user2 = ref2.current.value;\r\n    if (user1 === \"\" || user2 === \"\") {\r\n      toast.error(\"Select 2 name first\");\r\n    } else {\r\n      if (user1 === user2) {\r\n        toast.error(\"Same person cannot be a friend\");\r\n      } else {\r\n        const id1 = curd.Id(\"users\", { name: user1 });\r\n        const id2 = curd.Id(\"users\", { name: user2 });\r\n        const st = view(id1, id2);\r\n        let rNames = [];\r\n        st.forEach((e) => {\r\n          let temp = [];\r\n          e.forEach((f) => {\r\n            temp.push(curd.readData(\"users\", f).name);\r\n          });\r\n          rNames.push(temp);\r\n          temp = [];\r\n        });\r\n        setRel(rNames);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"view\">\r\n        <div className=\"formrow\">\r\n          <div className=\"formcontainer\">\r\n            <form action=\"\">\r\n              <h4>View Relation</h4>\r\n              <select type=\"text\" placeholder=\"Enter Name\" ref={ref}>\r\n                <option value=\"\">Select first Person</option>\r\n                {state?.map((e) => (\r\n                  <Option value={e} />\r\n                ))}\r\n              </select>\r\n              <select type=\"text\" placeholder=\"Enter Name\" ref={ref2}>\r\n                <option value=\"\">Select second Person</option>\r\n                {state?.map((e) => (\r\n                  <Option value={e} />\r\n                ))}\r\n              </select>\r\n              <button\r\n                className=\"btn\"\r\n                style={{ marginTop: \"2rem\" }}\r\n                onClick={view_r}\r\n              >\r\n                View\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"relationview\">\r\n          {rel?.map((e) => (\r\n            <Box sr={e} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\nconst Box = (props) => {\r\n  return (\r\n    <>\r\n      <div style={{ color: \"white\" }} className=\"viewBx\">\r\n        {props.sr.map((e, i, { length }) => (\r\n          <Singlenode name={e} index={i} length={length} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst Singlenode = (props) => {\r\n  return (\r\n    <>\r\n      <span className=\"indi\">{props.index == 0 ? \"\" : \">\"}</span>\r\n      <div style={{ color: \"white\" }} className=\"singlenode\">\r\n        {props.name}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst Option = (props) => {\r\n  return (\r\n    <>\r\n      <option value={props.value}>{props.value}</option>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}