{"ast":null,"code":"var _jsxFileName = \"C:\\\\internship\\\\Degree-of-seperation\\\\src\\\\pages\\\\relation\\\\Relation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport curd from \"../../curd/curd\";\nimport Header from \"../../components/header/Header\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"./relation.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Relation() {\n  _s();\n\n  const [state, setstate] = useState(null);\n  const ref = useRef(null);\n  const ref2 = useRef(null);\n\n  const fetch = () => {\n    let user = curd.readData(\"users\");\n    let keys = curd.getKeys(user);\n    let names = [];\n\n    for (let i = 0; i < keys.length; i++) {\n      names.push(user[keys[i]].name);\n    }\n\n    setstate(names);\n  };\n\n  useEffect(() => {\n    fetch();\n  }, []);\n\n  const addRelation = e => {\n    e.preventDefault();\n    const user1 = ref.current.value;\n    const user2 = ref2.current.value;\n\n    if (user1 === '' || user2 === \"\") {\n      toast.error(\"Choose friends first\");\n    } else {\n      if (user1 === user2) {\n        toast.error(\"Same person cannot be a friend\");\n      } else {\n        const id1 = curd.Id(\"users\", {\n          name: user1\n        });\n        const id2 = curd.Id(\"users\", {\n          name: user2\n        });\n        const pair = [id1, id2];\n        const pair2 = [id2, id1];\n\n        if (curd.existsCollection(\"friends\")) {\n          const all = curd.readData(\"friends\")[0].allPair;\n          let count = 0;\n\n          for (let i = 0; i < all.length; i++) {\n            const c = all[i];\n\n            if (c[0] === pair[0] && c[1] == pair[1] || c[1] == pair[0] && c[0] == pair[1]) {\n              count++;\n            }\n          }\n\n          if (count > 0) {\n            toast.error(\"Already Friend\");\n          } else {\n            all.push(pair);\n            all.push(pair2);\n            curd.updateData(\"friends\", 0, {\n              allPair: all\n            });\n            ref.current.value = '';\n            ref2.current.value = '';\n            toast.success(\"connected\", {\n              autoClose: 1000\n            });\n          }\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formcontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Relationship\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            ref: ref,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select first Person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), state === null || state === void 0 ? void 0 : state.map(e => /*#__PURE__*/_jsxDEV(Option, {\n              value: e\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            ref: ref2,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select second Person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), state === null || state === void 0 ? void 0 : state.map(e => /*#__PURE__*/_jsxDEV(Option, {\n              value: e\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            style: {\n              marginTop: \"2rem\"\n            },\n            onClick: addRelation,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Relation, \"N17tp2elCZ5SpejglTFo4L0WKSA=\");\n\n_c = Relation;\n\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"option\", {\n      value: props.value,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Option;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Relation\");\n$RefreshReg$(_c2, \"Option\");","map":{"version":3,"names":["React","useRef","useEffect","useState","curd","Header","ToastContainer","toast","Relation","state","setstate","ref","ref2","fetch","user","readData","keys","getKeys","names","i","length","push","name","addRelation","e","preventDefault","user1","current","value","user2","error","id1","Id","id2","pair","pair2","existsCollection","all","allPair","count","c","updateData","success","autoClose","map","marginTop","Option","props"],"sources":["C:/internship/Degree-of-seperation/src/pages/relation/Relation.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport curd from \"../../curd/curd\";\r\nimport Header from \"../../components/header/Header\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"./relation.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nexport default function Relation() {\r\n  const [state, setstate] = useState(null);\r\n  const ref = useRef(null);\r\n  const ref2 = useRef(null);\r\n  const fetch = () => {\r\n    let user = curd.readData(\"users\");\r\n    let keys = curd.getKeys(user);\r\n    let names = [];\r\n    for (let i = 0; i < keys.length; i++) {\r\n      names.push(user[keys[i]].name);\r\n    }\r\n    setstate(names);\r\n  };\r\n  useEffect(() => {\r\n    fetch();\r\n  }, []);\r\n  const addRelation = (e) => {\r\n    e.preventDefault();\r\n    const user1 = ref.current.value;\r\n    const user2 = ref2.current.value;\r\n    if(user1==='' || user2===\"\"){\r\n      toast.error(\"Choose friends first\");\r\n    }else{\r\n      if (user1 === user2) {\r\n        toast.error(\"Same person cannot be a friend\");\r\n      } else {\r\n        const id1 = curd.Id(\"users\", { name: user1 });\r\n        const id2 = curd.Id(\"users\", { name: user2 });\r\n        const pair = [id1, id2];\r\n        const pair2 = [id2, id1];\r\n        if (curd.existsCollection(\"friends\")) {\r\n          const all = curd.readData(\"friends\")[0].allPair;\r\n          let count = 0;\r\n          for (let i = 0; i < all.length; i++) {\r\n            const c = all[i];\r\n            if (\r\n              (c[0] === pair[0] && c[1] == pair[1]) ||\r\n              (c[1] == pair[0] && c[0] == pair[1])\r\n            ) {\r\n              count++;\r\n            }\r\n          }\r\n          if (count > 0) {\r\n            toast.error(\"Already Friend\");\r\n          } else {\r\n            all.push(pair);\r\n            all.push(pair2);\r\n            curd.updateData(\"friends\", 0, { allPair: all });\r\n            ref.current.value=''\r\n            ref2.current.value=''\r\n            toast.success(\"connected\",{ autoClose: 1000 });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"home\">\r\n        <div className=\"formcontainer\">\r\n          <form action=\"\">\r\n            <h4>Relationship</h4>\r\n            <select type=\"text\" placeholder=\"Enter Name\" ref={ref}>\r\n              <option value=\"\">Select first Person</option>\r\n              {state?.map((e) => (\r\n                <Option value={e} />\r\n              ))}\r\n            </select>\r\n            <select type=\"text\" placeholder=\"Enter Name\" ref={ref2}>\r\n              <option value=\"\">Select second Person</option>\r\n              {state?.map((e) => (\r\n                <Option value={e} />\r\n              ))}\r\n            </select>\r\n            <button\r\n              className=\"btn\"\r\n              style={{ marginTop: \"2rem\" }}\r\n              onClick={addRelation}\r\n            >\r\n              Connect\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\nconst Option = (props) => {\r\n  return (\r\n    <>\r\n      <option value={props.value}>{props.value}</option>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}